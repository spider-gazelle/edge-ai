services:
  # The Edge AI service
  # run: `docker-compose build` to update the service
  # run: `docker-compose up -d` to launch the service
  processor:
    image: stakach/edge-ai
    # build: .
    restart: always

    # network, host mode as we need multicast support
    container_name: processor
    hostname: processor
    network_mode: "host"

    # processor has a custom entry point
    entrypoint: /processor
    command: []

    volumes:
      - ./config/:/config/

      # the unix pipes for IPC
      - ./detections/:/detections/

      # video recording window
      # (record to memory so we don't wear out the HD)
      - /mnt/ramdisk:/mnt/ramdisk

      # AI model storage (downloaded based on config)
      - ./model_storage/:/model_storage/

      # we need to map in all the USB devices
      # as edge TPU device name changes when initialized
      - /dev/:/dev/

    # mapping dev and configuring privileged access is
    # the simplest way to support a wide range of hardware
    privileged: true

    environment:
      SG_ENV: "production"

  interface:
    image: stakach/edge-ai
    # build: .
    restart: always

    # network
    container_name: interface
    hostname: interface
    network_mode: "host"

    volumes:
      - ./clips/:/clips/
      - ./config/:/config/
      - ./detections/:/detections/
      - /mnt/ramdisk:/mnt/ramdisk

      # we need to map in all the USB devices
      # as edge TPU device name changes when initialized
      - /dev/:/dev/

    # required to open GPIO chips
    devices:
      - "/dev/gpiochip0:/dev/gpiochip0"

    # required to inspect GPIO chips
    cap_add:
      - SYS_RAWIO

    # Not required when using host network mode
    # ports:
    #  - "3000:3000"

  frontend:
    image: nginx
    restart: always

    # has to match the other containers
    network_mode: "host"
    container_name: frontend
    hostname: frontend
    depends_on:
      - interface
    volumes:
      - ./www/:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

    # Not required when using host network mode
    # ports:
    #   - 5000:80
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
